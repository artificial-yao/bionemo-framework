run_name: 'mega_local_angle' #CUDA_VISIBLE_DEVICES=1 python train.py --config-name "train_dit"
outdir: /workspace/bionemo/results/eqgatdiff
resume: null
ema_resume: null
wandb_params:
  mode: 'disabled'  # disabled, offline, online
  entity: 'clara-discovery'
  group: 'danny-testing'
  project: 'MoCo'

data:
  dataset_root: "/workspace/bionemo/data/pyg_geom_drug"
  processed_folder: "processed"
  batch_size: &batch_size 150 #200
  inference_batch_size: 150 #200
  removed_h: False
  data_loader_type: "midi"

loss:
  variables:
    - variable_name: 'x'
      loss_scale: 3.0
      aggregate: 'mean'
      continuous: True
      use_distance: "angle"
      distance_scale: null
    - variable_name: 'h'
      loss_scale: 1.0
      aggregate: 'mean'
      continuous: False
    - variable_name: 'edge_attr'
      loss_scale: 2.0
      aggregate: 'mean'
      continuous: False
    - variable_name: 'charges'
      loss_scale: 1.0
      aggregate: 'mean'
      continuous: False

interpolant:
  timesteps: &timesteps 500
  time_type: &time_type "discrete" #["discrete, "continuous]
  scheduler_type: &scheduler_type "cosine_adaptive" #["cosine_adaptive, "linear"]
  sample_time_method: "uniform" # ["symmetric", "uniform", "stab_mode", "logit_normal", "beta"]
  sample_time_mean: 0 # Used in stab_mode and logit_normal
  sample_time_scale: 0.81 # Used in stab_mode and logit_normal
  global_variable_name: 'h' # variable that is specficed below to be used for sampling time and loss sampling
  variables:
    - variable_name: 'x' 
      interpolant_type: 'continuous_diffusion' #["continuous_diffusion", "continuous_flow_matching"]
      diffusion_type: 'vdm'
      prior_type: 'gaussian'
      timesteps: *timesteps
      num_classes: 3
      scheduler_type: *scheduler_type
      scheduler_cut: False
      time_type: *time_type
      nu: 2.5
      com_free: True
    - variable_name: 'h'
      interpolant_type: 'discrete_diffusion' #["discrete_diffusion", "discrete_flow_matching"]
      prior_type: 'custom' #['uniform', 'mask', 'custom']
      custom_prior: '/workspace/bionemo/data/pyg_geom_drug/processed/train_types_h.npy'
      timesteps: *timesteps
      num_classes: &num_atoms 16
      scheduler_type: *scheduler_type
      scheduler_cut: False
      time_type: *time_type
      nu: 1.0
    - variable_name: 'edge_attr'
      interpolant_type: 'discrete_diffusion' #["discrete_diffusion", "discrete_flow_matching"]
      prior_type: 'custom'
      custom_prior: '/workspace/bionemo/data/pyg_geom_drug/processed/train_bond_types_h.npy'
      timesteps: *timesteps
      num_classes: 5
      scheduler_type: *scheduler_type
      scheduler_cut: False
      time_type: *time_type
      nu: 1.5
    - variable_name: 'charges'
      interpolant_type: 'discrete_diffusion' #["discrete_diffusion", "discrete_flow_matching"]
      prior_type: 'custom'
      custom_prior: '/workspace/bionemo/data/pyg_geom_drug/processed/train_charges_prior.npy' #! had to manually create the marginal (h_prior*charge_h_prior[:, None]).sum(0)
      timesteps: *timesteps
      scheduler_type: *scheduler_type
      scheduler_cut: False
      time_type: *time_type
      nu: 1.0
      concat: 'h'
      num_classes: 6
      offset: 2

  
dynamics:
  model_name: "megav2" #megadotfn
  model_args:
    atom_classes: 22
    edge_classes: 5
    invariant_edge_feat_dim: 128
    invariant_node_feat_dim: 256
    n_vector_features: 64
    equivariant_node_feature_dim: 3
    num_layers: 10
    num_heads: 4
    prune_edges: True
    # use_cross_product: True
  wrapper_args:
    timesteps: *timesteps
    time_type: *time_type
    # random_learning: False

self_conditioning:
  name: "base"
  variables:
    - variable_name: h
      hidden_dims: 32
      fuse_softmax: True
      vector: False
      clamp_min: null
      clamp_max: null
    - variable_name: charges
      hidden_dims: 16
      fuse_softmax: True
      vector: False
      clamp_min: null
      clamp_max: null

    - variable_name: edge_attr
      hidden_dims: 16
      fuse_softmax: True
      vector: False
      clamp_min: null
      clamp_max: null

    - variable_name: x
      hidden_dims: 1
      fuse_softmax: False
      vector: True
      clamp_min: -100
      clamp_max: 100

sample:
  node_distribution: "/workspace/bionemo/data/pyg_geom_drug/processed/train_n_h.pickle" # null

train:
  seed: 42
  gpus: 1
  n_epochs: 800
  enable_progress_bar: True
  gradient_clip_value: 10.0
  log_freq: 50
  val_freq: 5
  checkpoint_monitor: mol_stable
  checkpoint_monitor_mode: max
  checkpoint_every_n_train_steps: 500

evaluation:
  batch_size: 100
  n_molecules: 100
  timesteps: *timesteps
  compute_2D_metrics: True
  compute_3D_metrics: True
  compute_dihedrals: True
  compute_train_data_metrics: False

optimizer:
  type: adamw
  lr: 1.e-4
  weight_decay: 1.e-12
  amsgrad: True

lr_scheduler:
  # type: plateau
  # factor: 0.75
  # patience: 50
  # min_lr: 5.e-5
  # cooldown: 0
  # monitor: val/loss
  # interval: epoch
  # frequency: 5 #not in config but this is the default
  # type: linear_warmup
  # initial_lr: 1.e-5
  # final_lr: 1.e-4
  # num_warmup_steps: 1000
  # interval: step
  # frequency: 1 #not in config but this is the default
  type: linear_warmup_decay
  initial_lr: 2.e-5
  final_lr: 2.e-4
  num_warmup_steps: 10000
  milestone_steps: 150000
  min_lr_decay: 2.e-5
  num_decay_steps: 10000
  interval: step
  frequency: 1 
