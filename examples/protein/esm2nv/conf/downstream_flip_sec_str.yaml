name: esm2nv_flip
defaults:
  - pretrain_esm2_650M
do_preprocessing: False
do_training: True # set to false if data preprocessing steps must be completed
do_testing: True # set to true to run evaluation on test data after training
restore_from_path: null # path to nemo checkpoint of the fine-tuned model (encoder + task head) to be used for further training, testing or inference
target: bionemo.model.protein.esm1nv.ESM2nvModel # target class for protein model
infer_target: bionemo.model.protein.esm1nv.infer.ESM1nvInference # target inference class for protein model

trainer:
  devices: 2 # number of GPUs or CPUs
  num_nodes: 1
  max_epochs: 20
  val_check_interval: 20
  limit_val_batches: 1000 # number of batches in validation step, use fraction for fraction of data, 0 to disable
  limit_test_batches: 1000 # number of batches in test step, use fraction for fraction of data, 0 to disable
  accumulate_grad_batches: 1  # gradient accumulation; downstream model class inherits from ModelPT
  log_every_n_steps: 1  # increase logging frequency for downstream task


exp_manager:
  wandb_logger_kwargs:
    project: ${name}_${model.data.task_name}_finetuning
    name: ${name}_${model.data.task_name}_finetuning_encoder_frozen_${model.encoder_frozen}

model:
  restore_encoder_path: ${oc.env:BIONEMO_HOME}/models/protein/esm2nv/esm2nv_650M_converted.nemo # path to nemo checkpoint of the protein model. Other options: esm2nv_3B_converted.nemo
  encoder_frozen: True # encoder trainable or frozen
  post_process: False # must be False for downstream task
  micro_batch_size: 64 # NOTE: adjust to occupy ~ 90% of GPU memory
  global_batch_size: null # if null will be computed automatically
  tensor_model_parallel_size: 1  # model parallelism
  accumulate_grad_batches: 1  # gradient accumulation
  dropout_rate: 0.25 # dropout rate for downstream task
  cnn_dim: 32 # output channels in the downstream convolution layer
  data:
    task_name: secondary_structure # options: aav, bind, conservation, gb1, meltome, sav, scl, secondary_structure
    task_type: 'token-level-classification'  # alternative: classification, regression
    preprocessed_data_path: ${oc.env:BIONEMO_HOME}/data/FLIP # path where all preprocessed FLIP datasets are saved
    dataset_path: ${model.data.preprocessed_data_path}/${model.data.task_name} # path to a training data
    modify_percent: 0.0 # Turn off input sequence masking by default at inference time.
    dataset:
      train: x000
      val: x000
      test: x000
    sequence_column: "sequence" # name of column with protein sequence in csv file
    target_column: ["3state"] # names of label columns in csv file
    target_sizes: [3] # number of classes in each label
    mask_column: ["resolved"] # names of mask columns in csv file, masks must be 0 or 1
    num_workers: 8
    max_seq_length: ${model.seq_length}
    emb_batch_size: ${model.micro_batch_size}


  finetuning_optim: # optimizer parameters for downstream task model
    name: adam
    lr: 0.001
