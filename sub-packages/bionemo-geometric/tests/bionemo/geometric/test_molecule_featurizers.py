# SPDX-FileCopyrightText: Copyright (c) 2024 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: LicenseRef-Apache2
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


import pytest
from rdkit import Chem
from bionemo.geometric.molecule_featurizers import RDkit2DDescriptorFeaturizer
import numpy as np

@pytest.fixture(scope="module")
def sample_mol():
    return Chem.MolFromSmiles("NC(=O)c1cn(-c2ccc(S(N)(=O)=O)cc2)nc1-c1ccc(Cl)cc1")  # CHEMBL3126825

def test_rdkit2d_descriptor_featurizer(sample_mol):
    rdf = RDkit2DDescriptorFeaturizer()
    mol_feats = np.array(rdf.get_features(sample_mol))
    mol_feats_ref = np.array([11.739234088578126, 11.739234088578126, 0.017170781893004028, -3.781515243079616, 0.7220230649240628, 11.44, 376.82500000000005, 363.7210000000001, 376.039688956, 128, 0, 0.25206014374186, -0.36548056472166857, 0.36548056472166857, 0.25206014374186, 1.04, 1.64, 2.16, 35.49569200759094, 10.087164052685537, 2.1660855035461717, -2.027864781099429, 2.2489599335785333, -2.116891175408362, 7.8876058111792995, 0.10006104487344632, 3.002802610441619, 2.0768149956684177, 1041.9888121550669, 18.189869965382485, 12.756237786950482, 14.328663313896664, 11.753038761063381, 7.041763285225907, 8.966047236156697, 5.246005089352769, 7.243863927292341, 3.5271517413640963, 4.708359290115149, 2.2960288277468415, 2.937456811390436, -2.679999999999999, 443165.6204594159, 17.153053800207758, 6.320498570343795, 3.553955393718707, 148.42311271634844, 5.733667477162185, 5.693927994848461, 0.0, 10.023291153407584, 5.907179729351506, 0.0, 4.794537184071822, 18.238573657082064, 5.098681808301038, 0.0, 23.733674027155736, 36.39820241076966, 16.782928377051398, 16.146321241898335, 13.212334168400758, 27.531410772991606, 0.0, 9.780484743446223, 10.872641214770127, 4.895483475517775, 0.0, 65.31386492474428, 0.0, 16.944765761229018, 10.872641214770127, 0.0, 0.0, 11.600939890232516, 24.105461457126665, 10.023291153407584, 0.0, 10.357988675768818, 59.623263594823726, 5.022633313741326, 16.944765761229018, 0.0, 121.07000000000001, 15.930470882759089, 13.212334168400758, 0.0, 10.45893496721477, 21.967399074970345, 0.0, 35.1441147806047, 24.26546827384644, 0.0, 5.098681808301038, 22.473581105002644, 24.089632667996874, 5.877622127433703, 11.722063306685122, 10.022775328080856, 7.306696335665342, -0.627448034769462, 12.600266576990965, 1.4843513794406649, 0.0, -3.781515243079616, 0.0, 25, 4, 7, 0, 0, 0, 2, 1, 3, 5, 2, 9, 4, 0, 0, 0, 3, 1.9389999999999998, 93.90109999999999, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0])

    assert np.all(np.isclose(mol_feats, mol_feats_ref))
    # print(f"{mol_feats=}")